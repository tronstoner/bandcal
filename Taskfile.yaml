---
version: "3"

tasks:
  setup:
    desc: Setup the project by installing dependencies for both app and api.
    cmds:
      - cd api && task npm:ci
      - cd app && task npm:ci
  setup:auth:
    desc: Create a test user for nginx.
    cmds:
      - "read -p 'Enter username: ' username && htpasswd -c ./nginx/.htpasswd $username"
  dev:start:
    desc: Start development environment using Docker Compose.
    cmds:
      - export BANDCAL_DOCKERFILE_VUE=Dockerfile_dev BANDCAL_DOCKERFILE_API=Dockerfile_dev && docker compose -p bandcal up
  dev:rebuild:
    desc: Rebuild and start the app in development mode.
    cmds:
      - export BANDCAL_DOCKERFILE_VUE=Dockerfile_dev BANDCAL_DOCKERFILE_API=Dockerfile_dev && docker compose -p bandcal build
  dev:rebuild:no-cache:
    desc: Rebuild and start the app in development mode.
    cmds:
      - export BANDCAL_DOCKERFILE_VUE=Dockerfile_dev BANDCAL_DOCKERFILE_API=Dockerfile_dev && docker compose -p bandcal build --no-cache
  prod:start:
    desc: Will start the containers in production mode.
    cmds:
      - docker compose -p bandcal up
  prod:build:
    desc: Rebuild and start the app in production mode.
    cmds:
      - docker compose -p bandcal build
  prod:build:no-cache:
    desc: Rebuild and start the app in production mode.
    cmds:
      - docker compose -p bandcal build --no-cache
  remove:
    desc: Remove all Docker containers and images.
    cmds:
      - docker compose -p bandcal down --rmi all --volumes --remove-orphans
  stop:
    desc: Alias for `task down`.
    cmds:
      - task down
  down:
    desc: Stop all Docker containers without removing images.
    cmds:
      - docker compose -p bandcal down
  default:
    desc: List all available tasks.
    cmds:
      - task --list
