---
version: "3"

tasks:
  setup:
    desc: Setup the project by installing dependencies for both app and api.
    cmds:
      - cd api && task npm:ci
      - cd app && task npm:ci
  setup:auth:
    desc: Create a test user for nginx.
    cmds:
      - "read -p 'Enter username: ' username && htpasswd -c ./nginx/.htpasswd $username"
  start:dev:
    desc: Start development environment using Docker Compose.
    cmds:
      - export BANDCAL_DOCKERFILE_VUE=Dockerfile_dev BANDCAL_DOCKERFILE_API=Dockerfile_dev && docker compose -p bandcal up
  start:prod:
    desc: Start production environment using Docker Compose.
    cmds:
      - export BANDCAL_APP_NETWORK=bandcal-network BANDCAL_DOCKERFILE_VUE=Dockerfile BANDCAL_DOCKERFILE_API=Dockerfile && docker compose -p bandcal up
  remove:
    desc: Remove all Docker containers and images.
    cmds:
      - docker compose -p bandcal down --rmi all
  stop:
    desc: Stop all Docker containers without removing images.
    cmds:
      - docker compose -p bandcal down
  rebuild:dev:
    desc: Rebuild and start the app in development mode.
    cmds:
      - export BANDCAL_DOCKERFILE_VUE=Dockerfile_dev BANDCAL_DOCKERFILE_API=Dockerfile_dev && docker compose -p bandcal up --build
  rebuild:prod:
    desc: Rebuild and start the app in production mode.
    cmds:
      - BANDCAL_APP_NETWORK=bandcal-network && docker compose -p bandcal up --build
  prod-test1:
    desc: Rebuild and start the app in production mode.
    cmds:
      # - export BANDCAL_APP_NETWORK=bandcal-network1 && docker network create --driver bridge "$BANDCAL_APP_NETWORK" && docker compose -p bandcal1 up --build
      - export BANDCAL_APP_NETWORK=bandcal-network1 && docker compose -p bandcal1 up --build
  prod-test2:
    desc: Rebuild and start the app in production mode.
    cmds:
      - export BANDCAL_APP_NETWORK=bandcal-network2 && docker network create --driver bridge "$BANDCAL_APP_NETWORK" && docker compose -p bandcal2 up --build

  default:
    desc: List all available tasks.
    cmds:
      - task --list
